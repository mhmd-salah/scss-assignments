// import file 
@use "./helpers/vars" as *;
@use "./helpers/functions" as *;
@use "./helpers/Mixin" as *;
@use "./layout/header";
@use "./layout/footer";




//  1
.content {
    >.box {
        padding: 15px;

        >.title {
            font-size: 10px;
        }
    }

    .cat {
        padding: 15px;
    }

    &.premium::before {
        content: "premium box";
    }

    &.premium:hover {
        background-color: #eee;
    }
}

// 2
.class {
    > {
        .child {
            padding: 10px;
        }
    }
}

.class> {
    .child {
        padding: 10px;
    }
}

.class {
    >.child {
        padding: 10px;
    }
}

//3

.class {
    font: {
        weight: bold;
        size: 20px
    }

    ;
}

//4 
.parent {
    &+.sibling {
        margin: auto {
            top: 10px;
        }

        &~.last {
            padding: 10px;
        }
    }
}

/// @output :
/// .parent + .sibling{
///     margin:auto;
///     margin-top:10px
/// }
/// .parent + sibling ~ .last{
///     padding 10px
/// }


// 5 

// .widget {
//     background-color: white;
//     padding: 20px;
// }

// .main-border {
//     border: 1px solid #CCC
// }

// .my-class {
//     font-weight: bold;
//     margin: 20px auto;
//     @extend .widget;
//     @extend .main-border;
// }

// 6

%widget {
    background-color: white;
    padding: 20px;
}

%main-border {
    border: 1px solid #CCC
}

.my-class {
    @extend %widget
}

;

.my-class {
    @extend %main-border
}

.my-class {
    font-weight: bold;
    max-width: 20px auto;
}

// 7

.box {
    h2 {
        font-size: 20;
    }

    p {
        @extend h2;
    }
}

@mixin breakpoint ($name) {
    @if($name ==mobile) {
        @media(max-width:575px) {
            @content;
        }
    }
}

@include breakpoint(mobile) {
    .box {

        h2,
        p {
            font-size: 16px;
        }

        h2 span,
        p span {
            font-weight: bold;
        }
    }
}

//8

$red: #e91e63;
$green: #009688;

// Add What You Want Here
$link-color: $green;
$link-hover: $red;

// Do Not Edit Here
.box a {
    color: $link-color;

    &:hover {
        color: $link-hover;
    }
}

// 9 ;

//10 
.box {
    font-size: 20px;

    &-holder {
        width: 1000px;

        &-content {
            margin: auto;
        }
    }
}

// topic tow 

// 1

$main: "school";
$child: "box";
$language: "en"; // English
$gap: 20px;

.#{$main} {
    padding: 20px;

    @if($language =="en") {
        direction: ltr;
    }

    @else {
        direction: rtl;
    }

    margin-left: $gap;

    .#{$main}-#{$child} {
        padding: $gap / 2;
    }

    &:hover .#{$main}.#{$main}-#{$child} {
        background-color: #eee;
    }
}

// 2

$main-color: red;
$alt-color: blue;
/*Theme Version : 1.0*/
/*!Website theme main color is : #{$main-color}*/
/*!website theme alterna color is : #{$alt-color}*/

// 3

// $number: 10;
// $number: 8;
// $number: 5;
// .class{
//     @if($number > 8){
//         color: blue;
//     }@else if($number > 5){
//         color:green;
//     }@else{
//         color: red;
//     }
// }

// 4

$number: 10;
$color: red;
$theme: light;

.class {
    @if $number >5 & $color ==red & $theme !=dark {
        color: red;
    }
}

//  5

$number : 9;

.box {
    @if($number ==10 or $number ==9) {
        background-color: #eee;

        @if($number ==10) {
            text-align: center
        }
    }
}

// topic 3 

// 1

$direction: left;

.element {
    position: relative;
    @include square(150px, 200px);
    margin: 50px auto;

    &::before {
        content: "";
        @include arrow($direction);
    }

}

// 2

$grid_cols : 16;

@for $i from 1 through $grid_cols {
    .col-#{$i} {
        width: percentage($i / $grid_cols);
    }
}


// 3

$names: "books" 20px red 18,
    "games" 30px green 18,
    "dvds" 20px blue;

@each $name , $padd, $color, $num in $names {
    .#{$name} {
        padding: $padd;
        font-size: if($num, $num, 16px);
        border: 2px solid $color;
        color: #444;
    }
}

;
// 4;

$init : 1;

@while $init <=5 {
    .circle-#{$init * 100} {
        width:#{$init * 100px};
        height:#{$init * 100px};
        border-radius: #{$init * 100px / 2};
    }

    $init: $init + 1
}

// 5

@for $i from $init through 5 {
    .circle-#{$init * 100} {
        width: #{$init * 100};
        height: #{$init * 100};
        border-radius: #{$init * 100 / 2};
    }
}

// 6
textarea {
    @include placeholder {
        color: #777;
    }
}


// 7
@mixin flex-center($width : 400px){
    display: flex;
    justify-content: center;
    align-items: center;
    width: $width;
}

.box-one {
    @include flex-center(400px);
}

.box-two {
    @include flex-center;
}

// topic 4;

// 1
$num: 2px;
$start: 100;

@function double($size) {
  @return $size * $num;
}

@for $i from 1 through 5{
    .box-#{$start}{
        width: #{$start}px;
        height: double($start);
    }
    $start:$start * 2
}

// 2

@function get-total($nums...){
    $total:0px;
    @each $numm in $nums{
        $total : $total + $numm
    }
    @return $total
};

.bod{
    top: get-total(100,50,20);
}

// the end